<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sArrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//mass = random(10)
mass = 5
changed = false
TimeAlive = 0
spin = false
image_speed = .25
Timerr = 0
spot = noone
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//image_blend = color

if room != rMenu {
    //trails
    Timerr += 1
    if Timerr &gt; 3  {
        Timerr = 0
        dot = instance_create(x,y,oDot)
        with (dot) {
        color = other.color
        image_blend = color
        image_angle = other.image_angle 
        ID = other.ID
        spot = other.spot 
    }
    spot = dot
}

}

//stuff vvv

if (spin) { image_angle += 10 }

TimeAlive += 1

if TimeAlive &gt; room_speed * 20 { /* instance_destroy() */ }

nx = lengthdir_x(speed,direction)
ny = lengthdir_x(speed,direction)


//Plan = collision_line( x,y,nx,ny,oPlanet,true,true, )
//Plan = instance_place(x ,y ,oPlanet)

Jerry = instance_place(x,y,oPlanet)

if instance_exists(Jerry) {

hsp = hspeed
vsp = vspeed
//speed = 0
//snap
Diz = distance_to_object(hsp + vsp)
//DizDir = point_direction(x,y,Plan.x,Plan.y)

//x += lengthdir_x(Diz,DizDir)
//y += lengthdir_y(Diz,DizDir)

planetihit = Jerry

    if sprite_index = sSeed {
        speed = 0 instance_change(oRoot,true)
        changed = true
    }
    
    if sprite_index = sPepsi {
        instance_change(oArrowDead,true) 
        changed = true
    }
    if sprite_index = sBrain {
        instance_change(oArrowDead,true)
        sprite_index = sBrain 
        changed = true
    }
    if sprite_index = sWiskey {
        instance_change(oArrowDead,true)
        sprite_index = sWiskey
        changed = true
    }
    if sprite_index = sMininuke {
        speed = 0
        instance_destroy()
        instance_create(x,y,oNuke)
        changed = true
    }
    if sprite_index = sFlower {
        instance_change(oArrowDead,true)
        sprite_index = sFlower
        ScPoint()
        speed = 0
        changed = true
    }
    if sprite_index = sBooger {
        instance_change(oArrowDead,true)
        sprite_index = sBooger
        speed = 0
        changed = true
    }
    if sprite_index = sFishie {
        instance_change(oArrowDead,true)
        sprite_index = sFishie
        speed = 0
        changed = true
    }
    if sprite_index = sChair {
        ScPoint()
        instance_change(oArrowDead,true)
        sprite_index = sChair
        speed = 0
        changed = true
    }
    if changed = false { instance_change(oArrowDead,true) }

} else {

    ScGravity()
    image_angle = direction

}

var par;
par = instance_place(x,y,oPlayer)

if instance_exists(par) {

    if Id != par.Id { with (par) { instance_destroy() } }

    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
