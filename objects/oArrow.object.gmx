<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sArrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//mass = random(10)
mass = 5
changed = false
TimeAlive = 0
spin = false
image_speed = .25
Timerr = 0
spot = noone

//init
Alarm = 0
Hit = false
timealive = 0
Damage = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//image_blend = color

if room != rMenu and room != rCharSelect {
    //trails
    Timerr += 1
    if Timerr &gt; 3  {
        Timerr = 0
        dot = instance_create(x,y,oDot)
        with (dot) {
        color = other.color
        image_blend = color
        image_angle = other.image_angle 
        ID = other.ID
        spot = other.spot 
    }
    spot = dot
}

}

//stuff vvv

TimeAlive += 1

if TimeAlive &gt; room_speed * 20 { /* instance_destroy() */ }

nx = lengthdir_x(speed,direction)
ny = lengthdir_x(speed,direction)


//Plan = collision_line( x,y,nx,ny,oPlanet,true,true, )
//Plan = instance_place(x ,y ,oPlanet)

var Jerry;

if (TimeAlive  &gt; 1) {
    Jerry = ScSpeedCol( oPlanet )
} else { Jerry = noone }



if instance_exists(Jerry) {

hsp = hspeed
vsp = vspeed
//speed = 0
//snap
Diz = distance_to_object(hsp + vsp)
//DizDir = point_direction(x,y,Plan.x,Plan.y)

//x += lengthdir_x(Diz,DizDir)
//y += lengthdir_y(Diz,DizDir)

planetihit = Jerry

    /*
    if sprite_index = sSeed {
        speed = 0 instance_change(oRoot,true)
        changed = true
    }
    
    
    if sprite_index = sPepsi {
        instance_change(oArrowDead,true) 
        changed = true
    }
    if sprite_index = sBrain {
        instance_change(oArrowDead,true)
        sprite_index = sBrain 
        changed = true
    }
    if sprite_index = sWiskey {
        instance_change(oArrowDead,true)
        sprite_index = sWiskey
        changed = true
    }
    if sprite_index = sMininuke {
        speed = 0
        instance_destroy()
        instance_create(x,y,oNuke)
        changed = true
    }
    if sprite_index = sFlower {
        instance_change(oArrowDead,true)
        sprite_index = sFlower
        ScPoint()
        speed = 0
        changed = true
    }
    if sprite_index = sBooger {
        instance_change(oArrowDead,true)
        sprite_index = sBooger
        speed = 0
        changed = true
    }
    if sprite_index = sFishie {
        instance_change(oArrowDead,true)
        sprite_index = sFishie
        speed = 0
        changed = true
    }
    if sprite_index = sChair {
        ScPoint()
        instance_change(oArrowDead,true)
        sprite_index = sChair
        speed = 0
        changed = true
    }
    
    switch (sprite_index) {
    
    case sSeed:
    speed = 0
    instance_change(oRoot,true)
    changed = true;
    break;
    case sPepsi:
    speed = 0
    instance_change(oRoot,true)
    changed = true;
    break;
    
    
    
    
    
    
    
    
    }
    */
    
    if changed = false { instance_change(oArrowDead,true) }

} else {

    ScGravity()
    if (spin) { image_angle += 10  } else { image_angle = direction }
}
/*
var nx, ny, ndir;

ndir = direction
if speed != 0 { nx = x - lengthdir_x(speed * 2,ndir) } else { nx = x + lengthdir_x(2,ndir) } 
if speed != 0 { ny = y - lengthdir_y(speed * 2,ndir) } else { ny = y + lengthdir_y(2,ndir) }
player = collision_line(x,y,nx,ny,oPlayer,true,true)//instance_place(x,y,oPlayer)

//var slar;
slar = instance_place(x,y,oPlayer)

if dmg { Alarm += 1 if Alarm &gt; 5 { Alarm = 0 dmg = false } }


if instance_exists(player) or instance_exists(slar) {
    
    if !dmg {
        dmg = true
        //if Id != player.Id { with (player) { Health -= 1 } }
        //if Id = noone.Id {}
    }
    
}
*/


//playercolission ( fuck spelling )
HitPlayer = instance_place(x,y,oPlayer)

if Hit { Alarm += 1 if Alarm &gt; 10 { Alarm = 0 Hit = false } } 

if instance_exists(HitPlayer) and !Hit {
    
    if HitPlayer.Id != Id {
    
        Hit = true
            
        with(HitPlayer) { Health -= other.Damage }
        
   
    
    if global.gore {
        repeat (ceil(speed)) {
        with (instance_create(HitPlayer.x,HitPlayer.y,oBlood)) { speed = other.speed + random_range(-other.speed + 1,0) direction = other.direction + random_range(-10,10) }
    }
    
     } 
    
    }
    
    
}

if (global.big) {
    image_xscale = 1.5
    image_yscale = 1.5
} else {
    image_xscale = 1
    image_yscale = 1
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (global.debug) {
    draw_set_colour(color);
    var par, nx, ny, ndir;
    ndir = point_direction( x,y,x+hspeed, y+vspeed )
    nx = x + lengthdir_x(speed * 2,ndir)
    ny = y + lengthdir_y(speed * 2,ndir)
    par = draw_line_width(x,y,nx,ny,1.5)//instance_place(x,y,oPlayer)
    draw_set_colour(c_white);
} else { draw_self() }


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
